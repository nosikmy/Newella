openapi: 3.0.3
info:
  title: Newella
  description: OpenAPI documentation for Newella application
  version: 1.0.0

servers:
  - url: 'localhost:8080'
paths:
  /auth/sign-up:
    post:
      tags:
        - auth
      summary: registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: coolGuy2003
                email:
                  type: string
                  example: someEmail@email.com
                password:
                  type: string
                  example: superSecretWord
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: confirm email
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
  /auth/sign-in:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someEmail@email.com
                password:
                  type: string
                  example: superSecretWord
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: confirmation needed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: confirm email first
                  payload:
                    type: string
                    example: ""
                      

  /auth/forgotPassword:
    post:
      tags:
        - auth
      summary: to change password in case you forgot password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: someMail@gmail.com
                newPassword:
                  type: string
                  example: newSecretWord
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: sent
                  payload:
                    type: string
                    example: ""

  /auth/confirm:
    post:
      tags:
        - auth
      summary: confirm data that needs to be committed
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: object
            example: confirm
            enum:
              - confirm
              - forgot
              - change
        - name: hash
          in: query
          required: true
          schema:
            type: string
            example: DWQO0DQO9Q8CQ3272H90XJ08JEXR6731*&@(#$*^@(*#()))
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: confirmed
                  payload:
                    type: string
                    example: ""
        400:
          description: wrong data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: invalid link, try to resend confirmation mail
                  payload:
                    type: string
                    example: ""

  /api/users:
    get:
      tags:
        - admin
      summary: get all users
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 100
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 3
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 128
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            username:
                              type: string
                              example: someGuy23412
                            realName:
                              type: string
                              example: Issac Newton
                            email:
                              type: string
                              example: email@mail.com

  /api/users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 45
    get:
      tags:
        - user
        - admin
      summary: get user page (without his novels)
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "ok"
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      username:
                        type: string
                        example: someGuy23412
                      realName:
                        type: string
                        example: Issac Newton
                      description:
                        type: string
                        example: bla bla bla
                      email:
                        type: string
                        example: email@mail.com
                      subscribersNumber:
                        type: integer
                        example: 20
                      subscriptionsNumber:
                        type: integer
                        example: 35
    patch:
      tags:
        - user
        - admin
      summary: change some user data
      description: all fields are optinal
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: New username
                realName:
                  type: string
                  example: Новое Имя
                description:
                  type: string
                  example: bla bla bla
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
  /api/users/changePassword:
    post:
      tags:
        - user
        - admin
      summary: change password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: somePassword
                newPassword:
                  type: string
                  example: ASDQWDQS
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: sent
                  payload:
                    type: string
                    example: ""
        400:
          description: Wrong password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: wrong password
                  payload:
                    type: string
                    example:
  /api/users/{userId}/subscribers:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    get:
      tags:
        - user
      summary: to get all users subscribers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 51
                      rows:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 2
                            username:
                              type: string
                              example: some_guy
                            image:
                              type: string
                              example: pic.jpg
  /api/users/{userId}/subscriptions:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 45
    get:
      tags:
        - user
      summary: to get all users subscriptions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 51
                      rows:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 2
                            username:
                              type: string
                              example: some_guy
                            image:
                              type: string
                              example: pic.jpg
    post:
      tags:
        - user
      summary: to subscribe to the {:userId} user from authorized user account
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
  /api/users/{userId}/subscriptions/{subId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 78
      - name: subId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    delete:
      tags:
        - user
        - admin
      summary: to delete some user from subscriptions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
  /api/users/{userId}/library:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 78
    get:
      tags:
        - user
      summary: to get all users novels
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
            example: read
            description: favourite and released - helpful for user profile page, and others - for user personal library
            enum:
              - read
              - readable
              - favourite
              - created
              - wip
              - released
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 20
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 10
                      rows:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: NOVEL
                            price:
                              type: integer
                              example: 0
                            image:
                              type: string
                              example: pick.jpg
                            rating:
                              type: number
                              example: 2.7
  /api/novels:
    get:
      tags:
        - novels
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            example: 2
        - name: priceLow
          in: query
          required: false
          schema:
            type: integer
            example: 20
        - name: priceHigh
          in: query
          required: false
          schema:
            type: integer
            example: 30
        - name: length
          in: query
          required: false
          schema:
            type: integer
            example: normal
            enum:
              - short
              - medium
              - long
        - name: authorId
          in: query
          required: false
          schema:
            type: integer
            example: 85
        - name: ratingLow
          in: query
          required: false
          schema:
            type: integer
            example: 2
        - name: ratingHigh
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: search
          in: query
          required: false
          schema:
            type: string
            example: cool novel
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            example: price ASC
        - name: tags
          in: query
          required: false
          description: One or more tags
          schema:
            type: array
            items:
              type: string
          explode: false
          style: form
          examples:
            oneTag:
              value: ["tag_1"]
            multipleTags:
              value: ["tag_1", "tag_2", "tag_3"]

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 10
                      rows:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: NOVEL
                            price:
                              type: integer
                              example: 0
                            image:
                              type: string
                              example: pic.jpg
                            rating:
                              type: number
                              example: 2.7

    post:
      tags:
        - novels creation
      summary: to create novel rudiment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: novel 1
                description:
                  type: string
                  example: cool thing
                price:
                  type: integer
                  example: 50
                length:
                  type: string
                  example: short
                  enum:
                    - short
                    - medium
                    - long
                image:
                  type: string
                  format: binary
                  example: pic.jpg
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
  /api/novels/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 24
    get:
      tags:
        - novels
      summary: to get one novel short info for preview
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: Some
                      description:
                        type: string
                        example: bla bla bla
                      price:
                        type: integer
                        example: 20
                      length:
                        type: string
                        example: short
                        enum:
                          - short
                          - medium
                          - long
                      status:
                        type: string
                        example: ok
                      image:
                        type: string
                        example: pic.jpg
                      rating:
                        type: number
                        example: 3.5
                      categoryId:
                        type: integer
                        example: 53
                      categoryRoute:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 53
                            name:
                              type: string
                              example: Category
                      tags:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: Screamers
    
    patch:
      tags:
        - novels creation
      summary: to fill novel rudiment
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: novel 1
                description:
                  type: string
                  example: cool thing
                price:
                  type: integer
                  example: 50
                length:
                  type: string
                  example: short
                  enum:
                    - short
                    - medium
                    - long
                status:
                  type: string
                  example: released
                image:
                  type: string
                  format: binary
                  example: pic.jpg
        
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
    delete:
      tags:
        - novels creation
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
  
  /api/novels/{id}/readSlideGroup:
    get:
      tags:
        - novels reading
      summary: to get slides on one group
      description: user must store current slide and slide group number to locate his reading progress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 56
        - name: slideGroupNumber
          in: query
          required: true
          schema:
            type: integer
            example: 2

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 10
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            replica:
                              type: string
                              example: What a wonderful weather today!
                            replicaType:
                              type: string
                              example: choice
                              enum:
                                - simple
                                - choice
                            anwers:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 2
                                  name:
                                    type: string
                                    example: Yeah
                                  nextSlideId:
                                    type: integer
                                    example: 3
                            sequenceNumber:
                              type: integer
                              example: 2
                            background:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2,
                                name:
                                  type: string
                                  example: Forest
                                image:
                                  type: string
                                  example: forest.png
                            heroMood:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2,
                                name:
                                  type: string
                                  example: Alex
                                moodName:
                                  type: string
                                  example: Happy
                                image:
                                  type: string
                                  example: happyAlex.jpeg
                            soundTransition:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2,
                                name:
                                  type: string
                                  example: happySongStarter
                                image:
                                  type: string
                                  example: 1.mp3

  /api/novels/{id}/slideGroups:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels creation
      summary: to create slide group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: some useful information
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 2
      tags:
        - novels creation
      summary: to get all slides group
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 25
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: some useful information


  /api/novels/{id}/slideGroups/{slideGroupId}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 10
        - name: slideGroupId
          in: path
          required: true
          schema:
            type: integer
            example: 10
    get:
      tags:
        - novels creation
      summary: to get all slides inside one group
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: some slide
                        replica:
                          type: string
                          example: hello
                        replicaType:
                          type: string
                          enum:
                            - choice
                            - simple
                          example: simple
                        answers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 2
                              name:
                                type: string
                                example: okey
                              nextSlideId:
                                type: integer
                                example: 3
                        sequenceNumber:
                          type: integer
                          example: 4
                        backgroundId:
                          type: integer
                          example: 2
                        heroMoodId:
                          type: integer
                          example: 2
                        soundTransitionId:
                          type: integer
                          example: 2
                        


    delete:
      tags:
        - novels creation
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""



    patch:
      tags:
        - novels creation
      summary: to change slide group name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: some useful information
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/slides/{slideId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: slideId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    get:
      tags:
        - novels creation
      summary: to get one slide
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      replica:
                        type: string
                        example: What a wonderful weather today!
                      replicaType:
                        type: string
                        example: choice
                        enum:
                          - simple
                          - choice
                      anwers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: Yeah
                            nextSlideId:
                              type: integer
                              example: 3
                      sequenceNumber:
                        type: integer
                        example: 2
                      background:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2,
                          name:
                            type: string
                            example: Forest
                          image:
                            type: string
                            example: forest.png
                      heroMood:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2,
                          name:
                            type: string
                            example: Alex
                          moodName:
                            type: string
                            example: Happy
                          image:
                            type: string
                            example: happyAlex.jpeg
                      soundTransition:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2,
                          name:
                            type: string
                            example: happySongStarter
                          image:
                            type: string
                            example: 1.mp3
    patch:
      tags:
        - novels creation
      summary: to change slide info
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: slide_2
                replica:
                  type: string
                  example: some text2
                replicaType:
                  type: string
                  example: choice 
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""
                    
    delete:
      tags:
        - novels creation
      summary: to delete slide
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/slides/{slideGroupId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: slideGroupId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels creation
      summary: to create slide in certain slide group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: slide_1
                replica:
                  type: string
                  example: some text
                replicaType:
                  type: string
                  example: simple "note = this field is optional"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1

  /api/novels/{id}/slides/{slideId}/backgrounds/{backgroundId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: slideId
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: backgroundId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels creation
      summary: to add background to certain slide
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""


  /api/novels/{id}/slides/{slideId}/heroMoods/{heroMoodId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: slideId
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: heroMoodId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels creation
      summary: to add hero mood to certain slide
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/slides/{slideId}/sounds/{soundId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: slideId
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: soundId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels creation
      summary: to add sound transition to certain slide
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""
          
  /api/novels/{id}/heroes:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    get:
      tags:
        - novels creation
      summary: get all heroes for one novel
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Amina

    post:
      tags:
        - novels creation
      summary: to create hero
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: SomeName

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1

  /api/novels/{id}/heroes/{heroId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: heroId
        in: path
        required: true
        schema:
          type: integer
          example: 21
    
    get:
      tags:
        - novels creation
      summary: get hero info
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Alex
                      heroMoods:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: happy
                            image:
                              type: string
                              example: happyAlex.jpeg
    patch:
      tags:
        - novels creation
      summary: to change hero info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: SomeName

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

    delete:
      tags:
        - novels creation
      summary: to delete hero

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/heroMoods/{heroId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: heroId
        in: path
        required: true
        schema:
          type: integer
          example: 56

    post:
      tags:
        - novels creation
      summary: to create hero mood for certain hero
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: SomeMOOD
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2


  /api/novels/{id}/heroMoods/{heroMoodId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: heroMoodId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    patch:
      tags:
        - novels creation
      summary: to change hero mood
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: SomeMOOD
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

    delete:
      tags:
        - novels creation
      summary: to delete hero mood
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/backgrounds:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    get:
      tags:
        - novels creation
      summary: to get all backgrounds fror one novel
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Home
                        image:
                          type: string
                          example: "somePic.png"
    post:
      tags:
        - novels creation
      summary: to create background in certain novel
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Home
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2

  /api/novels/{id}/backgrounds/{backgroundId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: backgroundId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      tags:
        - novels creation
      summary: to change background
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Home
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""
    delete:
      tags:
        - novels creation
      summary: to delete background
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/backsounds:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    get:
      tags:
        - novels creation
      summary: to get all background sounds for current novel
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Home
                        sound:
                          type: string
                          example: "sound.mp3"

    post:
      tags:
      - novels creation
      summary: to create new background sound
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                sound:
                  type: string
                  format: binary
                  example: "someSound.mp3"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                

  /api/novels/{id}/sounds/{backsoundId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: backsoundId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      tags:
      - novels creation
      summary: to change background sound
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                sound:
                  type: string
                  format: binary
                  example: "someSound.mp3"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

    delete:
      tags:
      - novels creation
      summary: to delete background sound
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""


  /api/novels/{id}/sounds:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    get:
      tags:
        - novels creation
      summary: to get all sound transitions for one novel
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Home
                        sound:
                          type: string
                          example: "sound.mp3"

    post:
      tags:
      - novels creation
      summary: to create sound transition
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                sound:
                  type: string
                  format: binary
                  example: "someSound.mp3"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                

  /api/novels/{id}/sounds/{soundId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: soundId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      tags:
      - novels creation
      summary: to change sound transition
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                sound:
                  type: string
                  format: binary
                  example: "someSound.mp3"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

    delete:
      tags:
      - novels creation
      summary: to delete sound transition
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/answers/{slideId}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 56
        - name: slideId
          in: path
          required: true
          schema:
            type: integer
            example: 56

    get:
      tags:
        - novels creation
      summary: to get all answers to current slide
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Hello
                        nextSlideId:
                          type: integer
                          example: 2

    post:
      tags:
      - novels creation
      summary: to create answer on current slide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                nextSlideId:
                  type: integer
                  example: 2

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20

  /api/novels/{id}/answers/{answerId}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 56
        - name: answerId
          in: path
          required: true
          schema:
            type: integer
            example: 56

    patch:
      tags:
      - novels creation
      summary: to change answer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: someSound
                nextSlideId:
                  type: integer
                  example: 2

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

    delete:
      tags:
      - novels creation
      summary: to delete answer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: ""

  /api/novels/{id}/favourites/{userId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 2

    post:
      tags:
        - novels interaction
      summary: to add novel to user's favourites
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
    delete:
      tags:
        - novels
      summary: to delete novel from user's favs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/novel/{id}/rate:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    post:
      tags:
        - novels interaction
      summary: to rate novel by current authenticated user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                  example: 2.7
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/novel/{id}/complain:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    post:
      tags:
        - novels interaction
      summary: to create complaint on novel
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  example: bad words
                description:
                  type: string
                  example: i am so sensitive, can you please delete these all bad words?
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/novel/{id}/comment:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels interaction
      summary: to comment novel

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: funny
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'
  
  /api/novel/{id}/addToLibrary:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    post:
      tags:
        - novels reading
      summary: to add novel to user library as "readable"

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/novel/{id}/saveProgress:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    post:
      tags:
        - novels reading
      summary: to save user read progress for current novel

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                slideGroupNumber:
                  type: integer
                  example: 2
                slideNumber:
                  type: integer
                  example: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/moderation:
    get:
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 20
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 2

      tags:
        - moderation
      summary: to get all novels with complaints in descending order

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        subject:
                          type: string
                          example: Bad title
                        userId:
                          type: integer
                          example: 2
                        novelId:
                          type: integer
                          example: 3

  /api/moderation/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 56
    
    get:
      tags:
        - moderation
      summary: to get certain complaint

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      subject:
                        type: string
                        example: Bad title
                      description:
                        type: string
                        example: awful, please delete it
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          username:
                            type: string
                            example: coolGuy14
                      novel:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: NovelName
                          price:
                            type: integer
                            example: 20
                          status:
                            type: string
                            example: released
                          rating:
                            type: integer
                            example: 2.0
                          categoryId:
                            type: integer
                            example: 6
                          userId:
                            type: integer
                            example: 10
                          

    post:
      tags:
        - moderation
      summary: to make a descision about current complaint ticket

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: edit
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse200'

  /api/admin/filters:
    get:
      tags:
        - filters
      summary: to get all available filtes

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          enum:
                            - categorical
                            - numeric
                          example: categorical
                        minValue:
                          type: integer
                          example:
                        maxValue:
                          type: integer
                          example:
                        sortType:
                          type: string
                          example: descending
                        filterValues:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 2
                              value:
                                type: string
                                example: someValue
                              sequenceNumber:
                                type: integer
                                example: 2              
    
    post:
      tags:
        - filters
      summary: create new filter

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - categorical
                    - numeric
                  example: categorical
                minValue:
                  type: integer
                  example:
                maxValue:
                  type: integer
                  example:
                sortType:
                  type: string
                  example: descending
                filterValues:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      value:
                        type: string
                        example: someValue
                      sequenceNumber:
                        type: integer
                        example: 2
      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1

components:
  schemas:
    StatusResponse200:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: ok
        payload:
          type: string
          example: ""